//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public BasicEntitasMonogameExample.PlayerControlledComponent playerControlled { get { return (BasicEntitasMonogameExample.PlayerControlledComponent)GetComponent(ComponentIds.PlayerControlled); } }

        public bool hasPlayerControlled { get { return HasComponent(ComponentIds.PlayerControlled); } }

        public Entity AddPlayerControlled(bool newEnabled) {
            var component = CreateComponent<BasicEntitasMonogameExample.PlayerControlledComponent>(ComponentIds.PlayerControlled);
            component.enabled = newEnabled;
            return AddComponent(ComponentIds.PlayerControlled, component);
        }

        public Entity ReplacePlayerControlled(bool newEnabled) {
            var component = CreateComponent<BasicEntitasMonogameExample.PlayerControlledComponent>(ComponentIds.PlayerControlled);
            component.enabled = newEnabled;
            ReplaceComponent(ComponentIds.PlayerControlled, component);
            return this;
        }

        public Entity RemovePlayerControlled() {
            return RemoveComponent(ComponentIds.PlayerControlled);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherPlayerControlled;

        public static IMatcher PlayerControlled {
            get {
                if (_matcherPlayerControlled == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.PlayerControlled);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherPlayerControlled = matcher;
                }

                return _matcherPlayerControlled;
            }
        }
    }
}
